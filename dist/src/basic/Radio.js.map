{"version":3,"sources":["../../../src/basic/Radio.js"],"names":["Radio","defaultProps","standardStyle","props","variables","context","theme","variable","_root","c","prepareRootProps","Platform","OS","selected","iconType","color","selectedColor","radioColor","lineHeight","height","fontSize","radioBtnSize","undefined","radioSelectedColorAndroid","radioBtnLineHeight","Component","contextTypes","PropTypes","object","propTypes","TouchableOpacity","bool","StyledRadio","mapPropsToStyleNames"],"mappings":"q1BAAA,4B,2CACA,qC,mDACA,yCACA,iEACA,uC,6CAEA,mE,yEACA,qD,iDACA,mD,67BAEMA,M,2RAIe,CACjB,GAAMC,cAAe,CACnBC,cAAe,KADI,CAArB,CAIA,MAAO,2BAAa,KAAKC,KAAlB,CAAyBF,YAAzB,CAAP,CACD,C,uCAEQ,iBACP,GAAMG,WAAY,KAAKC,OAAL,CAAaC,KAAb,CACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADnC,CAEdG,kBAFJ,CAIA,MACE,+BAAC,6BAAD,WACE,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EADP,EAEM,KAAKC,gBAAL,EAFN,mDAIGC,sBAASC,EAAT,GAAgB,KAAhB,EAAyB,CAAC,KAAKT,KAAL,CAAWD,aAArC,CACC,KAAKC,KAAL,CAAWU,QAAX,EACE,8BAAC,gBAAD,EACE,KAAM,KAAKV,KAAL,CAAWW,QADnB,CAEE,MAAO,CACLC,MAAO,KAAKZ,KAAL,CAAWa,aAAX,CACH,KAAKb,KAAL,CAAWa,aADR,CAEHZ,UAAUa,UAHT,CAILC,WAAY,EAJP,CAKLC,OAAQ,EALH,CAMLC,SAAUhB,UAAUiB,YANf,CAFT,CAUE,KAAK,eAVP,iDAFH,CAgBC,8BAAC,gBAAD,EACE,KAAM,KAAKlB,KAAL,CAAWW,QADnB,CAEE,MAAO,CACLC,MACEJ,sBAASC,EAAT,GAAgB,KAAhB,CACI,KAAKT,KAAL,CAAWU,QAAX,CACE,KAAKV,KAAL,CAAWa,aAAX,CACE,KAAKb,KAAL,CAAWa,aADb,CAEEZ,UAAUa,UAHd,CAIE,KAAKd,KAAL,CAAWY,KAAX,CACA,KAAKZ,KAAL,CAAWY,KADX,CAEAO,SAPN,CAQI,KAAKnB,KAAL,CAAWU,QAAX,CACA,KAAKV,KAAL,CAAWa,aAAX,CACE,KAAKb,KAAL,CAAWa,aADb,CAEEZ,UAAUmB,yBAHZ,CAIA,KAAKpB,KAAL,CAAWY,KAAX,CACA,KAAKZ,KAAL,CAAWY,KADX,CAEAO,SAhBD,CAiBLJ,WAAYd,UAAUoB,kBAjBjB,CAkBLJ,SAAUhB,UAAUiB,YAlBf,CAFT,CAsBE,KACEV,sBAASC,EAAT,GAAgB,KAAhB,CACI,KAAKT,KAAL,CAAWU,QAAX,CACE,qBADF,CAEE,sBAHN,CAII,KAAKV,KAAL,CAAWU,QAAX,CACA,oBADA,CAEA,qBA7BR,iDApBJ,CADF,CAwDD,C,mBAzEiBY,gB,EAAdzB,K,CACG0B,Y,CAAe,CACpBpB,MAAOqB,oBAAUC,MADG,C,CA2ExB5B,MAAM6B,SAAN,aACKC,8BAAiBD,SADtB,EAEEhB,SAAUc,oBAAUI,IAFtB,CAGE7B,cAAeyB,oBAAUI,IAH3B,GAMA,GAAMC,aAAc,yCAAa,kBAAb,CAAiC,EAAjC,CAAqCC,8BAArC,EAClBjC,KADkB,CAApB,C,QAIwBA,K,CAAfgC,W","file":"Radio.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\nimport Icon from '../basic/IconNB';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport variable from '../theme/variables/platform';\nimport computeProps from '../utils/computeProps';\n\nclass Radio extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n  prepareRootProps() {\n    const defaultProps = {\n      standardStyle: false\n    };\n\n    return computeProps(this.props, defaultProps);\n  }\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n\n    return (\n      <TouchableOpacity\n        ref={c => (this._root = c)}\n        {...this.prepareRootProps()}\n      >\n        {Platform.OS === 'ios' && !this.props.standardStyle ? (\n          this.props.selected && (\n            <Icon\n              type={this.props.iconType}\n              style={{\n                color: this.props.selectedColor\n                  ? this.props.selectedColor\n                  : variables.radioColor,\n                lineHeight: 25,\n                height: 20,\n                fontSize: variables.radioBtnSize\n              }}\n              name=\"ios-checkmark\"\n            />\n          )\n        ) : (\n          <Icon\n            type={this.props.iconType}\n            style={{\n              color:\n                Platform.OS === 'ios'\n                  ? this.props.selected\n                    ? this.props.selectedColor\n                      ? this.props.selectedColor\n                      : variables.radioColor\n                    : this.props.color\n                    ? this.props.color\n                    : undefined\n                  : this.props.selected\n                  ? this.props.selectedColor\n                    ? this.props.selectedColor\n                    : variables.radioSelectedColorAndroid\n                  : this.props.color\n                  ? this.props.color\n                  : undefined,\n              lineHeight: variables.radioBtnLineHeight,\n              fontSize: variables.radioBtnSize\n            }}\n            name={\n              Platform.OS === 'ios'\n                ? this.props.selected\n                  ? 'ios-radio-button-on'\n                  : 'ios-radio-button-off'\n                : this.props.selected\n                ? 'md-radio-button-on'\n                : 'md-radio-button-off'\n            }\n          />\n        )}\n      </TouchableOpacity>\n    );\n  }\n}\n\nRadio.propTypes = {\n  ...TouchableOpacity.propTypes,\n  selected: PropTypes.bool,\n  standardStyle: PropTypes.bool\n};\n\nconst StyledRadio = connectStyle('NativeBase.Radio', {}, mapPropsToStyleNames)(\n  Radio\n);\n\nexport { StyledRadio as Radio };\n"]}